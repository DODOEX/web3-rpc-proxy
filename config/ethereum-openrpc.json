{
    "openrpc": "0.0.1",
    "info": {
        "title": "Ethereum JSON-RPC Specification for Web3 RPC Proxy",
        "description": "A Web3 RPC Proxy version of the specification of the standard interface for Ethereum clients.",
        "version": "0.0.0"
    },
    "methods": [
        {
            "name": "eth_accounts",
            "summary": "Returns a list of addresses owned by client.",
            "params": [],
            "result": {
                "name": "Accounts",
                "schema": {
                    "title": "Accounts",
                    "type": "array",
                    "items": {
                        "title": "hex encoded address",
                        "type": "string",
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                    }
                }
            }
        },
        {
            "name": "eth_blobBaseFee",
            "summary": "Returns the base fee per blob gas in wei.",
            "params": [],
            "result": {
                "name": "Blob gas base fee",
                "schema": {
                    "title": "Blob gas base fee",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
            }
        },
        {
            "name": "eth_blockNumber",
            "summary": "Returns the number of most recent block.",
            "params": [],
            "result": {
                "name": "Block number",
                "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
            }
        },
        {
            "name": "eth_call",
            "summary": "Executes a new message call immediately without creating a transaction on the block chain.",
            "params": [
                {
                    "name": "Transaction",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "title": "Transaction object generic to all types",
                        "additionalProperties": false,
                        "properties": {
                            "type": {
                                "title": "type",
                                "type": "string",
                                "pattern": "^0x([0-9a-fA-F]?){1,2}$"
                            },
                            "nonce": {
                                "title": "nonce",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "to": {
                                "title": "to address",
                                "oneOf": [
                                    {
                                        "title": "Contract Creation (null)",
                                        "type": "null"
                                    },
                                    {
                                        "title": "Address",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-fA-F]{40}$"
                                    }
                                ]
                            },
                            "from": {
                                "title": "from address",
                                "type": "string",
                                "pattern": "^0x[0-9a-fA-F]{40}$"
                            },
                            "gas": {
                                "title": "gas limit",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "value": {
                                "title": "value",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "input": {
                                "title": "input data",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                            },
                            "gasPrice": {
                                "title": "gas price",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The gas price willing to be paid by the sender in wei"
                            },
                            "maxPriorityFeePerGas": {
                                "title": "max priority fee per gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                            },
                            "maxFeePerGas": {
                                "title": "max fee per gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                            },
                            "maxFeePerBlobGas": {
                                "title": "max fee per blob gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei"
                            },
                            "accessList": {
                                "title": "accessList",
                                "type": "array",
                                "description": "EIP-2930 access list",
                                "items": {
                                    "title": "Access list entry",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "address": {
                                            "title": "hex encoded address",
                                            "type": "string",
                                            "pattern": "^0x[0-9a-fA-F]{40}$"
                                        },
                                        "storageKeys": {
                                            "type": "array",
                                            "items": {
                                                "title": "32 byte hex value",
                                                "type": "string",
                                                "pattern": "^0x[0-9a-f]{64}$"
                                            }
                                        }
                                    }
                                }
                            },
                            "blobVersionedHashes": {
                                "title": "blobVersionedHashes",
                                "description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
                                "type": "array",
                                "items": {
                                    "title": "32 byte hex value",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                }
                            },
                            "blobs": {
                                "title": "blobs",
                                "description": "Raw blob data.",
                                "type": "array",
                                "items": {
                                    "title": "hex encoded bytes",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]*$"
                                }
                            },
                            "chainId": {
                                "title": "chainId",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Chain ID that this transaction is valid on."
                            }
                        }
                    }
                },
                {
                    "name": "Block",
                    "required": false,
                    "schema": {
                        "title": "Block number, tag, or block hash",
                        "anyOf": [
                            {
                                "title": "Block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            {
                                "title": "Block tag",
                                "type": "string",
                                "enum": [
                                    "earliest",
                                    "finalized",
                                    "safe",
                                    "latest",
                                    "pending"
                                ],
                                "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                            },
                            {
                                "title": "Block hash",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]{64}$"
                            }
                        ]
                    }
                }
            ],
            "result": {
                "name": "Return data",
                "schema": {
                    "title": "hex encoded bytes",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]*$"
                }
            }
        },
        {
            "name": "eth_chainId",
            "summary": "Returns the chain ID of the current network.",
            "params": [],
            "result": {
                "name": "Chain ID",
                "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
            }
        },
        {
            "name": "eth_coinbase",
            "summary": "Returns the client coinbase address.",
            "params": [],
            "result": {
                "name": "Coinbase address",
                "schema": {
                    "title": "hex encoded address",
                    "type": "string",
                    "pattern": "^0x[0-9a-fA-F]{40}$"
                }
            }
        },
        {
            "name": "eth_createAccessList",
            "summary": "Generates an access list for a transaction.",
            "params": [
                {
                    "name": "Transaction",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "title": "Transaction object generic to all types",
                        "additionalProperties": false,
                        "properties": {
                            "type": {
                                "title": "type",
                                "type": "string",
                                "pattern": "^0x([0-9a-fA-F]?){1,2}$"
                            },
                            "nonce": {
                                "title": "nonce",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "to": {
                                "title": "to address",
                                "oneOf": [
                                    {
                                        "title": "Contract Creation (null)",
                                        "type": "null"
                                    },
                                    {
                                        "title": "Address",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-fA-F]{40}$"
                                    }
                                ]
                            },
                            "from": {
                                "title": "from address",
                                "type": "string",
                                "pattern": "^0x[0-9a-fA-F]{40}$"
                            },
                            "gas": {
                                "title": "gas limit",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "value": {
                                "title": "value",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "input": {
                                "title": "input data",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                            },
                            "gasPrice": {
                                "title": "gas price",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The gas price willing to be paid by the sender in wei"
                            },
                            "maxPriorityFeePerGas": {
                                "title": "max priority fee per gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                            },
                            "maxFeePerGas": {
                                "title": "max fee per gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                            },
                            "maxFeePerBlobGas": {
                                "title": "max fee per blob gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei"
                            },
                            "accessList": {
                                "title": "accessList",
                                "type": "array",
                                "description": "EIP-2930 access list",
                                "items": {
                                    "title": "Access list entry",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "address": {
                                            "title": "hex encoded address",
                                            "type": "string",
                                            "pattern": "^0x[0-9a-fA-F]{40}$"
                                        },
                                        "storageKeys": {
                                            "type": "array",
                                            "items": {
                                                "title": "32 byte hex value",
                                                "type": "string",
                                                "pattern": "^0x[0-9a-f]{64}$"
                                            }
                                        }
                                    }
                                }
                            },
                            "blobVersionedHashes": {
                                "title": "blobVersionedHashes",
                                "description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
                                "type": "array",
                                "items": {
                                    "title": "32 byte hex value",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                }
                            },
                            "blobs": {
                                "title": "blobs",
                                "description": "Raw blob data.",
                                "type": "array",
                                "items": {
                                    "title": "hex encoded bytes",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]*$"
                                }
                            },
                            "chainId": {
                                "title": "chainId",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Chain ID that this transaction is valid on."
                            }
                        }
                    }
                },
                {
                    "name": "Block",
                    "required": false,
                    "schema": {
                        "title": "Block number or tag",
                        "oneOf": [
                            {
                                "title": "Block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            {
                                "title": "Block tag",
                                "type": "string",
                                "enum": [
                                    "earliest",
                                    "finalized",
                                    "safe",
                                    "latest",
                                    "pending"
                                ],
                                "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                            }
                        ]
                    }
                }
            ],
            "result": {
                "name": "Gas used",
                "schema": {
                    "title": "Access list result",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "accessList": {
                            "title": "accessList",
                            "type": "array",
                            "items": {
                                "title": "Access list entry",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "address": {
                                        "title": "hex encoded address",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-fA-F]{40}$"
                                    },
                                    "storageKeys": {
                                        "type": "array",
                                        "items": {
                                            "title": "32 byte hex value",
                                            "type": "string",
                                            "pattern": "^0x[0-9a-f]{64}$"
                                        }
                                    }
                                }
                            }
                        },
                        "error": {
                            "title": "error",
                            "type": "string"
                        },
                        "gasUsed": {
                            "title": "Gas used",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        }
                    }
                }
            }
        },
        {
            "name": "eth_estimateGas",
            "summary": "Generates and returns an estimate of how much gas is necessary to allow the transaction to complete.",
            "params": [
                {
                    "name": "Transaction",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "title": "Transaction object generic to all types",
                        "additionalProperties": false,
                        "properties": {
                            "type": {
                                "title": "type",
                                "type": "string",
                                "pattern": "^0x([0-9a-fA-F]?){1,2}$"
                            },
                            "nonce": {
                                "title": "nonce",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "to": {
                                "title": "to address",
                                "oneOf": [
                                    {
                                        "title": "Contract Creation (null)",
                                        "type": "null"
                                    },
                                    {
                                        "title": "Address",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-fA-F]{40}$"
                                    }
                                ]
                            },
                            "from": {
                                "title": "from address",
                                "type": "string",
                                "pattern": "^0x[0-9a-fA-F]{40}$"
                            },
                            "gas": {
                                "title": "gas limit",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "value": {
                                "title": "value",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "input": {
                                "title": "input data",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                            },
                            "gasPrice": {
                                "title": "gas price",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The gas price willing to be paid by the sender in wei"
                            },
                            "maxPriorityFeePerGas": {
                                "title": "max priority fee per gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                            },
                            "maxFeePerGas": {
                                "title": "max fee per gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                            },
                            "maxFeePerBlobGas": {
                                "title": "max fee per blob gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei"
                            },
                            "accessList": {
                                "title": "accessList",
                                "type": "array",
                                "description": "EIP-2930 access list",
                                "items": {
                                    "title": "Access list entry",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "address": {
                                            "title": "hex encoded address",
                                            "type": "string",
                                            "pattern": "^0x[0-9a-fA-F]{40}$"
                                        },
                                        "storageKeys": {
                                            "type": "array",
                                            "items": {
                                                "title": "32 byte hex value",
                                                "type": "string",
                                                "pattern": "^0x[0-9a-f]{64}$"
                                            }
                                        }
                                    }
                                }
                            },
                            "blobVersionedHashes": {
                                "title": "blobVersionedHashes",
                                "description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
                                "type": "array",
                                "items": {
                                    "title": "32 byte hex value",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                }
                            },
                            "blobs": {
                                "title": "blobs",
                                "description": "Raw blob data.",
                                "type": "array",
                                "items": {
                                    "title": "hex encoded bytes",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]*$"
                                }
                            },
                            "chainId": {
                                "title": "chainId",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Chain ID that this transaction is valid on."
                            }
                        }
                    }
                },
                {
                    "name": "Block",
                    "required": false,
                    "schema": {
                        "title": "Block number or tag",
                        "oneOf": [
                            {
                                "title": "Block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            {
                                "title": "Block tag",
                                "type": "string",
                                "enum": [
                                    "earliest",
                                    "finalized",
                                    "safe",
                                    "latest",
                                    "pending"
                                ],
                                "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                            }
                        ]
                    }
                }
            ],
            "result": {
                "name": "Gas used",
                "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
            }
        },
        {
            "name": "eth_feeHistory",
            "summary": "Transaction fee history",
            "description": "Returns transaction base fee per gas and effective priority fee per gas for the requested/supported block range.",
            "params": [
                {
                    "name": "blockCount",
                    "description": "Requested range of blocks. Clients will return less than the requested range if not all blocks are available.",
                    "required": true,
                    "schema": {
                        "title": "hex encoded unsigned integer",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                },
                {
                    "name": "newestBlock",
                    "description": "Highest block of the requested range.",
                    "required": true,
                    "schema": {
                        "title": "Block number or tag",
                        "oneOf": [
                            {
                                "title": "Block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            {
                                "title": "Block tag",
                                "type": "string",
                                "enum": [
                                    "earliest",
                                    "finalized",
                                    "safe",
                                    "latest",
                                    "pending"
                                ],
                                "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                            }
                        ]
                    }
                },
                {
                    "name": "rewardPercentiles",
                    "description": "A monotonically increasing list of percentile values. For each block in the requested range, the transactions will be sorted in ascending order by effective tip per gas and the coresponding effective tip for the percentile will be determined, accounting for gas consumed.",
                    "required": true,
                    "schema": {
                        "title": "rewardPercentiles",
                        "type": "array",
                        "items": {
                            "title": "rewardPercentile",
                            "description": "Floating point value between 0 and 100.",
                            "type": "number"
                        }
                    }
                }
            ],
            "result": {
                "name": "feeHistoryResult",
                "description": "Fee history for the returned block range. This can be a subsection of the requested range if not all blocks are available.",
                "schema": {
                    "title": "feeHistoryResults",
                    "description": "Fee history results.",
                    "type": "object",
                    "required": [
                        "oldestBlock",
                        "baseFeePerGas",
                        "gasUsedRatio"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "oldestBlock": {
                            "title": "oldestBlock",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                            "description": "Lowest number block of returned range."
                        },
                        "baseFeePerGas": {
                            "title": "baseFeePerGasArray",
                            "description": "An array of block base fees per gas. This includes the next block after the newest of the returned range, because this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks.",
                            "type": "array",
                            "items": {
                                "title": "hex encoded unsigned integer",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            }
                        },
                        "baseFeePerBlobGas": {
                            "title": "baseFeePerBlobGasArray",
                            "description": "An array of block base fees per blob gas. This includes the next block after the newest of the returned range, because this value can be derived from the newest block. Zeroes are returned for pre-EIP-4844 blocks.",
                            "type": "array",
                            "items": {
                                "title": "hex encoded unsigned integer",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            }
                        },
                        "gasUsedRatio": {
                            "title": "gasUsedRatio",
                            "description": "An array of block gas used ratios. These are calculated as the ratio of gasUsed and gasLimit.",
                            "type": "array",
                            "items": {
                                "title": "normalized ratio",
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1
                            }
                        },
                        "blobGasUsedRatio": {
                            "title": "blobGasUsedRatio",
                            "description": "An array of block blob gas used ratios. These are calculated as the ratio of blobGasUsed and the max blob gas per block.",
                            "type": "array",
                            "items": {
                                "title": "normalized ratio",
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1
                            }
                        },
                        "reward": {
                            "title": "rewardArray",
                            "description": "A two-dimensional array of effective priority fees per gas at the requested block percentiles.",
                            "type": "array",
                            "items": {
                                "title": "rewardPercentile",
                                "description": "An array of effective priority fee per gas data points from a single block. All zeroes are returned if the block is empty.",
                                "type": "array",
                                "items": {
                                    "title": "rewardPercentile",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                    "description": "A given percentile sample of effective priority fees per gas from a single block in ascending order, weighted by gas used. Zeroes are returned if the block is empty."
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "eth_gasPrice",
            "summary": "Returns the current price per gas in wei.",
            "params": [],
            "result": {
                "name": "Gas price",
                "schema": {
                    "title": "Gas price",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
            }
        },
        {
            "name": "eth_getBalance",
            "summary": "Returns the balance of the account of given address.",
            "params": [
                {
                    "name": "Address",
                    "required": true,
                    "schema": {
                        "title": "hex encoded address",
                        "type": "string",
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                    }
                },
                {
                    "name": "Block",
                    "required": true,
                    "schema": {
                        "title": "Block number, tag, or block hash",
                        "anyOf": [
                            {
                                "title": "Block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            {
                                "title": "Block tag",
                                "type": "string",
                                "enum": [
                                    "earliest",
                                    "finalized",
                                    "safe",
                                    "latest",
                                    "pending"
                                ],
                                "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                            },
                            {
                                "title": "Block hash",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]{64}$"
                            }
                        ]
                    }
                }
            ],
            "result": {
                "name": "Balance",
                "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
            }
        },
        {
            "name": "eth_getBlockByHash",
            "summary": "Returns information about a block by hash.",
            "params": [
                {
                    "name": "Block hash",
                    "required": true,
                    "schema": {
                        "title": "32 byte hex value",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{64}$"
                    }
                },
                {
                    "name": "Hydrated transactions",
                    "required": true,
                    "schema": {
                        "title": "hydrated",
                        "type": "boolean"
                    }
                }
            ],
            "result": {
                "name": "Block information",
                "schema": {
                    "oneOf": [
                        {
                            "title": "Not Found (null)",
                            "type": "null"
                        },
                        {
                            "title": "Block object",
                            "type": "object",
                            "additionalProperties": true,
                            "properties": {
                                "hash": {
                                    "title": "Hash",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "parentHash": {
                                    "title": "Parent block hash",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "sha3Uncles": {
                                    "title": "Ommers hash",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "miner": {
                                    "title": "Coinbase",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-fA-F]{40}$"
                                },
                                "stateRoot": {
                                    "title": "State root",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "transactionsRoot": {
                                    "title": "Transactions root",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "receiptsRoot": {
                                    "title": "Receipts root",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "logsBloom": {
                                    "title": "Bloom filter",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{512}$"
                                },
                                "difficulty": {
                                    "title": "Difficulty",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "number": {
                                    "title": "Number",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "gasLimit": {
                                    "title": "Gas limit",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "gasUsed": {
                                    "title": "Gas used",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "timestamp": {
                                    "title": "Timestamp",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "extraData": {
                                    "title": "Extra data",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]*$"
                                },
                                "mixHash": {
                                    "title": "Mix hash",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "nonce": {
                                    "title": "Nonce",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{16}$"
                                },
                                "totalDifficulty": {
                                    "title": "Total difficulty",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "baseFeePerGas": {
                                    "title": "Base fee per gas",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "withdrawalsRoot": {
                                    "title": "Withdrawals root",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "blobGasUsed": {
                                    "title": "Blob gas used",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "excessBlobGas": {
                                    "title": "Excess blob gas",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "parentBeaconBlockRoot": {
                                    "title": "Parent Beacon Block Root",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "size": {
                                    "title": "Block size",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "transactions": {
                                    "anyOf": [
                                        {
                                            "title": "Transaction hashes",
                                            "type": "array",
                                            "items": {
                                                "title": "32 byte hex value",
                                                "type": "string",
                                                "pattern": "^0x[0-9a-f]{64}$"
                                            }
                                        },
                                        {
                                            "title": "Full transactions",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "title": "Transaction information",
                                                "required": [
                                                    "blockHash",
                                                    "blockNumber",
                                                    "from",
                                                    "hash",
                                                    "transactionIndex"
                                                ],
                                                "properties": {
                                                    "blockHash": {
                                                        "title": "block hash",
                                                        "type": "string",
                                                        "pattern": "^0x[0-9a-f]{64}$"
                                                    },
                                                    "blockNumber": {
                                                        "title": "block number",
                                                        "type": "string",
                                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                                    },
                                                    "from": {
                                                        "title": "from address",
                                                        "type": "string",
                                                        "pattern": "^0x[0-9a-fA-F]{40}$"
                                                    },
                                                    "hash": {
                                                        "title": "transaction hash",
                                                        "type": "string",
                                                        "pattern": "^0x[0-9a-f]{64}$"
                                                    },
                                                    "transactionIndex": {
                                                        "title": "transaction index",
                                                        "type": "string",
                                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "withdrawals": {
                                    "title": "Withdrawals",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "title": "Validator withdrawal",
                                        "required": [
                                            "index",
                                            "validatorIndex",
                                            "address",
                                            "amount"
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                            "index": {
                                                "title": "index of withdrawal",
                                                "type": "string",
                                                "pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
                                            },
                                            "validatorIndex": {
                                                "title": "index of validator that generated withdrawal",
                                                "type": "string",
                                                "pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
                                            },
                                            "address": {
                                                "title": "recipient address for withdrawal value",
                                                "type": "string",
                                                "pattern": "^0x[0-9a-fA-F]{40}$"
                                            },
                                            "amount": {
                                                "title": "value contained in withdrawal",
                                                "type": "string",
                                                "pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
                                            }
                                        }
                                    }
                                },
                                "uncles": {
                                    "title": "Uncles",
                                    "type": "array",
                                    "items": {
                                        "title": "32 byte hex value",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]{64}$"
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "eth_getBlockByNumber",
            "summary": "Returns information about a block by number.",
            "params": [
                {
                    "name": "Block",
                    "required": true,
                    "schema": {
                        "title": "Block number or tag",
                        "oneOf": [
                            {
                                "title": "Block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            {
                                "title": "Block tag",
                                "type": "string",
                                "enum": [
                                    "earliest",
                                    "finalized",
                                    "safe",
                                    "latest",
                                    "pending"
                                ],
                                "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                            }
                        ]
                    }
                },
                {
                    "name": "Hydrated transactions",
                    "required": true,
                    "schema": {
                        "title": "hydrated",
                        "type": "boolean"
                    }
                }
            ],
            "result": {
                "name": "Block information",
                "schema": {
                    "oneOf": [
                        {
                            "title": "Not Found (null)",
                            "type": "null"
                        },
                        {
                            "title": "Block object",
                            "type": "object",
                            "additionalProperties": true,
                            "properties": {
                                "hash": {
                                    "title": "Hash",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "parentHash": {
                                    "title": "Parent block hash",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "sha3Uncles": {
                                    "title": "Ommers hash",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "miner": {
                                    "title": "Coinbase",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-fA-F]{40}$"
                                },
                                "stateRoot": {
                                    "title": "State root",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "transactionsRoot": {
                                    "title": "Transactions root",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "receiptsRoot": {
                                    "title": "Receipts root",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "logsBloom": {
                                    "title": "Bloom filter",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{512}$"
                                },
                                "difficulty": {
                                    "title": "Difficulty",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "number": {
                                    "title": "Number",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "gasLimit": {
                                    "title": "Gas limit",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "gasUsed": {
                                    "title": "Gas used",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "timestamp": {
                                    "title": "Timestamp",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "extraData": {
                                    "title": "Extra data",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]*$"
                                },
                                "mixHash": {
                                    "title": "Mix hash",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "nonce": {
                                    "title": "Nonce",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{16}$"
                                },
                                "totalDifficulty": {
                                    "title": "Total difficulty",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "baseFeePerGas": {
                                    "title": "Base fee per gas",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "withdrawalsRoot": {
                                    "title": "Withdrawals root",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "blobGasUsed": {
                                    "title": "Blob gas used",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "excessBlobGas": {
                                    "title": "Excess blob gas",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "parentBeaconBlockRoot": {
                                    "title": "Parent Beacon Block Root",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "size": {
                                    "title": "Block size",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "transactions": {
                                    "anyOf": [
                                        {
                                            "title": "Transaction hashes",
                                            "type": "array",
                                            "items": {
                                                "title": "32 byte hex value",
                                                "type": "string",
                                                "pattern": "^0x[0-9a-f]{64}$"
                                            }
                                        },
                                        {
                                            "title": "Full transactions",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "title": "Transaction information",
                                                "required": [
                                                    "blockHash",
                                                    "blockNumber",
                                                    "from",
                                                    "hash",
                                                    "transactionIndex"
                                                ],
                                                "properties": {
                                                    "blockHash": {
                                                        "title": "block hash",
                                                        "type": "string",
                                                        "pattern": "^0x[0-9a-f]{64}$"
                                                    },
                                                    "blockNumber": {
                                                        "title": "block number",
                                                        "type": "string",
                                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                                    },
                                                    "from": {
                                                        "title": "from address",
                                                        "type": "string",
                                                        "pattern": "^0x[0-9a-fA-F]{40}$"
                                                    },
                                                    "hash": {
                                                        "title": "transaction hash",
                                                        "type": "string",
                                                        "pattern": "^0x[0-9a-f]{64}$"
                                                    },
                                                    "transactionIndex": {
                                                        "title": "transaction index",
                                                        "type": "string",
                                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "withdrawals": {
                                    "title": "Withdrawals",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "title": "Validator withdrawal",
                                        "required": [
                                            "index",
                                            "validatorIndex",
                                            "address",
                                            "amount"
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                            "index": {
                                                "title": "index of withdrawal",
                                                "type": "string",
                                                "pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
                                            },
                                            "validatorIndex": {
                                                "title": "index of validator that generated withdrawal",
                                                "type": "string",
                                                "pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
                                            },
                                            "address": {
                                                "title": "recipient address for withdrawal value",
                                                "type": "string",
                                                "pattern": "^0x[0-9a-fA-F]{40}$"
                                            },
                                            "amount": {
                                                "title": "value contained in withdrawal",
                                                "type": "string",
                                                "pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
                                            }
                                        }
                                    }
                                },
                                "uncles": {
                                    "title": "Uncles",
                                    "type": "array",
                                    "items": {
                                        "title": "32 byte hex value",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]{64}$"
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "eth_getBlockReceipts",
            "summary": "Returns the receipts of a block by number or hash.",
            "params": [
                {
                    "name": "Block",
                    "required": true,
                    "schema": {
                        "title": "Block number, tag, or block hash",
                        "anyOf": [
                            {
                                "title": "Block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            {
                                "title": "Block tag",
                                "type": "string",
                                "enum": [
                                    "earliest",
                                    "finalized",
                                    "safe",
                                    "latest",
                                    "pending"
                                ],
                                "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                            },
                            {
                                "title": "Block hash",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]{64}$"
                            }
                        ]
                    }
                }
            ],
            "result": {
                "name": "Receipts information",
                "schema": {
                    "oneOf": [
                        {
                            "title": "Not Found (null)",
                            "type": "null"
                        },
                        {
                            "title": "Receipts information",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "title": "Receipt information",
                                "required": [
                                    "blockHash",
                                    "blockNumber",
                                    "from",
                                    "cumulativeGasUsed",
                                    "gasUsed",
                                    "logs",
                                    "logsBloom",
                                    "transactionHash",
                                    "transactionIndex",
                                    "effectiveGasPrice"
                                ],
                                "additionalProperties": true,
                                "properties": {
                                    "type": {
                                        "title": "type",
                                        "type": "string",
                                        "pattern": "^0x([0-9a-fA-F]?){1,2}$"
                                    },
                                    "transactionHash": {
                                        "title": "transaction hash",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]{64}$"
                                    },
                                    "transactionIndex": {
                                        "title": "transaction index",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "blockHash": {
                                        "title": "block hash",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]{64}$"
                                    },
                                    "blockNumber": {
                                        "title": "block number",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "from": {
                                        "title": "from",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-fA-F]{40}$"
                                    },
                                    "to": {
                                        "title": "to",
                                        "description": "Address of the receiver or null in a contract creation transaction.",
                                        "oneOf": [
                                            {
                                                "title": "Contract Creation (null)",
                                                "type": "null"
                                            },
                                            {
                                                "title": "Recipient Address",
                                                "type": "string",
                                                "pattern": "^0x[0-9a-fA-F]{40}$"
                                            }
                                        ]
                                    },
                                    "cumulativeGasUsed": {
                                        "title": "cumulative gas used",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "The sum of gas used by this transaction and all preceding transactions in the same block."
                                    },
                                    "gasUsed": {
                                        "title": "gas used",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "The amount of gas used for this specific transaction alone."
                                    },
                                    "blobGasUsed": {
                                        "title": "blob gas used",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "The amount of blob gas used for this specific transaction. Only specified for blob transactions as defined by EIP-4844."
                                    },
                                    "contractAddress": {
                                        "title": "contract address",
                                        "description": "The contract address created, if the transaction was a contract creation, otherwise null.",
                                        "oneOf": [
                                            {
                                                "title": "hex encoded address",
                                                "type": "string",
                                                "pattern": "^0x[0-9a-fA-F]{40}$"
                                            },
                                            {
                                                "title": "Null",
                                                "type": "null"
                                            }
                                        ]
                                    },
                                    "logs": {
                                        "title": "logs",
                                        "type": "array",
                                        "items": {
                                            "title": "log",
                                            "type": "object",
                                            "required": [
                                                "transactionHash"
                                            ],
                                            "additionalProperties": false,
                                            "properties": {
                                                "removed": {
                                                    "title": "removed",
                                                    "type": "boolean"
                                                },
                                                "logIndex": {
                                                    "title": "log index",
                                                    "type": "string",
                                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                                },
                                                "transactionIndex": {
                                                    "title": "transaction index",
                                                    "type": "string",
                                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                                },
                                                "transactionHash": {
                                                    "title": "transaction hash",
                                                    "type": "string",
                                                    "pattern": "^0x[0-9a-f]{64}$"
                                                },
                                                "blockHash": {
                                                    "title": "block hash",
                                                    "type": "string",
                                                    "pattern": "^0x[0-9a-f]{64}$"
                                                },
                                                "blockNumber": {
                                                    "title": "block number",
                                                    "type": "string",
                                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                                },
                                                "address": {
                                                    "title": "address",
                                                    "type": "string",
                                                    "pattern": "^0x[0-9a-fA-F]{40}$"
                                                },
                                                "data": {
                                                    "title": "data",
                                                    "type": "string",
                                                    "pattern": "^0x[0-9a-f]*$"
                                                },
                                                "topics": {
                                                    "title": "topics",
                                                    "type": "array",
                                                    "items": {
                                                        "title": "32 hex encoded bytes",
                                                        "type": "string",
                                                        "pattern": "^0x[0-9a-f]{64}$"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "logsBloom": {
                                        "title": "logs bloom",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]{512}$"
                                    },
                                    "root": {
                                        "title": "state root",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]{64}$",
                                        "description": "The post-transaction state root. Only specified for transactions included before the Byzantium upgrade."
                                    },
                                    "status": {
                                        "title": "status",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "Either 1 (success) or 0 (failure). Only specified for transactions included after the Byzantium upgrade."
                                    },
                                    "effectiveGasPrice": {
                                        "title": "effective gas price",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "The actual value per gas deducted from the sender's account. Before EIP-1559, this is equal to the transaction's gas price. After, it is equal to baseFeePerGas + min(maxFeePerGas - baseFeePerGas, maxPriorityFeePerGas)."
                                    },
                                    "blobGasPrice": {
                                        "title": "blob gas price",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                        "description": "The actual value per gas deducted from the sender's account for blob gas. Only specified for blob transactions as defined by EIP-4844."
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "eth_getBlockTransactionCountByHash",
            "summary": "Returns the number of transactions in a block from a block matching the given block hash.",
            "params": [
                {
                    "name": "Block hash",
                    "schema": {
                        "title": "32 byte hex value",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{64}$"
                    }
                }
            ],
            "result": {
                "name": "Transaction count",
                "schema": {
                    "oneOf": [
                        {
                            "title": "Not Found (null)",
                            "type": "null"
                        },
                        {
                            "title": "Transaction count",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        }
                    ]
                }
            }
        },
        {
            "name": "eth_getBlockTransactionCountByNumber",
            "summary": "Returns the number of transactions in a block matching the given block number.",
            "params": [
                {
                    "name": "Block",
                    "schema": {
                        "title": "Block number or tag",
                        "oneOf": [
                            {
                                "title": "Block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            {
                                "title": "Block tag",
                                "type": "string",
                                "enum": [
                                    "earliest",
                                    "finalized",
                                    "safe",
                                    "latest",
                                    "pending"
                                ],
                                "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                            }
                        ]
                    }
                }
            ],
            "result": {
                "name": "Transaction count",
                "schema": {
                    "oneOf": [
                        {
                            "title": "Not Found (null)",
                            "type": "null"
                        },
                        {
                            "title": "Transaction count",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        }
                    ]
                }
            }
        },
        {
            "name": "eth_getCode",
            "summary": "Returns code at a given address.",
            "params": [
                {
                    "name": "Address",
                    "required": true,
                    "schema": {
                        "title": "hex encoded address",
                        "type": "string",
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                    }
                },
                {
                    "name": "Block",
                    "required": true,
                    "schema": {
                        "title": "Block number, tag, or block hash",
                        "anyOf": [
                            {
                                "title": "Block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            {
                                "title": "Block tag",
                                "type": "string",
                                "enum": [
                                    "earliest",
                                    "finalized",
                                    "safe",
                                    "latest",
                                    "pending"
                                ],
                                "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                            },
                            {
                                "title": "Block hash",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]{64}$"
                            }
                        ]
                    }
                }
            ],
            "result": {
                "name": "Bytecode",
                "schema": {
                    "title": "hex encoded bytes",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]*$"
                }
            }
        },
        {
            "name": "eth_getFilterChanges",
            "summary": "Polling method for a filter, which returns an array of logs which occurred since last poll.",
            "params": [
                {
                    "name": "Filter Identifier",
                    "schema": {
                        "title": "hex encoded unsigned integer",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                }
            ],
            "result": {
                "name": "Log objects",
                "schema": {
                    "title": "Filter results",
                    "anyOf": [
                        {
                            "title": "new block or transaction hashes",
                            "type": "array",
                            "items": {
                                "title": "32 byte hex value",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]{64}$"
                            }
                        },
                        {
                            "title": "new logs",
                            "type": "array",
                            "items": {
                                "title": "log",
                                "type": "object",
                                "required": [
                                    "transactionHash"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                    "removed": {
                                        "title": "removed",
                                        "type": "boolean"
                                    },
                                    "logIndex": {
                                        "title": "log index",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "transactionIndex": {
                                        "title": "transaction index",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "transactionHash": {
                                        "title": "transaction hash",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]{64}$"
                                    },
                                    "blockHash": {
                                        "title": "block hash",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]{64}$"
                                    },
                                    "blockNumber": {
                                        "title": "block number",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "address": {
                                        "title": "address",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-fA-F]{40}$"
                                    },
                                    "data": {
                                        "title": "data",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]*$"
                                    },
                                    "topics": {
                                        "title": "topics",
                                        "type": "array",
                                        "items": {
                                            "title": "32 hex encoded bytes",
                                            "type": "string",
                                            "pattern": "^0x[0-9a-f]{64}$"
                                        }
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "eth_getFilterLogs",
            "summary": "Returns an array of all logs matching filter with given id.",
            "params": [
                {
                    "name": "Filter Identifier",
                    "schema": {
                        "title": "hex encoded unsigned integer",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                }
            ],
            "result": {
                "name": "Log objects",
                "schema": {
                    "title": "Filter results",
                    "anyOf": [
                        {
                            "title": "new block or transaction hashes",
                            "type": "array",
                            "items": {
                                "title": "32 byte hex value",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]{64}$"
                            }
                        },
                        {
                            "title": "new logs",
                            "type": "array",
                            "items": {
                                "title": "log",
                                "type": "object",
                                "required": [
                                    "transactionHash"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                    "removed": {
                                        "title": "removed",
                                        "type": "boolean"
                                    },
                                    "logIndex": {
                                        "title": "log index",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "transactionIndex": {
                                        "title": "transaction index",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "transactionHash": {
                                        "title": "transaction hash",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]{64}$"
                                    },
                                    "blockHash": {
                                        "title": "block hash",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]{64}$"
                                    },
                                    "blockNumber": {
                                        "title": "block number",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "address": {
                                        "title": "address",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-fA-F]{40}$"
                                    },
                                    "data": {
                                        "title": "data",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]*$"
                                    },
                                    "topics": {
                                        "title": "topics",
                                        "type": "array",
                                        "items": {
                                            "title": "32 hex encoded bytes",
                                            "type": "string",
                                            "pattern": "^0x[0-9a-f]{64}$"
                                        }
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "eth_getLogs",
            "summary": "Returns an array of all logs matching filter with given id.",
            "params": [
                {
                    "name": "Filter",
                    "schema": {
                        "title": "filter",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "fromBlock": {
                                "title": "from block",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "toBlock": {
                                "title": "to block",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "address": {
                                "title": "Address(es)",
                                "oneOf": [
                                    {
                                        "title": "Any Address",
                                        "type": "null"
                                    },
                                    {
                                        "title": "Address",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-fA-F]{40}$"
                                    },
                                    {
                                        "title": "Addresses",
                                        "type": "array",
                                        "items": {
                                            "title": "hex encoded address",
                                            "type": "string",
                                            "pattern": "^0x[0-9a-fA-F]{40}$"
                                        }
                                    }
                                ]
                            },
                            "topics": {
                                "title": "Topics",
                                "oneOf": [
                                    {
                                        "title": "Any Topic Match",
                                        "type": "null"
                                    },
                                    {
                                        "title": "Specified Filter Topics",
                                        "type": "array",
                                        "items": {
                                            "title": "Filter Topic List Entry",
                                            "oneOf": [
                                                {
                                                    "title": "Single Topic Match",
                                                    "type": "string",
                                                    "pattern": "^0x[0-9a-f]{64}$"
                                                },
                                                {
                                                    "title": "Multiple Topic Match",
                                                    "type": "array",
                                                    "items": {
                                                        "title": "32 hex encoded bytes",
                                                        "type": "string",
                                                        "pattern": "^0x[0-9a-f]{64}$"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            ],
            "result": {
                "name": "Log objects",
                "schema": {
                    "title": "Filter results",
                    "anyOf": [
                        {
                            "title": "new block or transaction hashes",
                            "type": "array",
                            "items": {
                                "title": "32 byte hex value",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]{64}$"
                            }
                        },
                        {
                            "title": "new logs",
                            "type": "array",
                            "items": {
                                "title": "log",
                                "type": "object",
                                "required": [
                                    "transactionHash"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                    "removed": {
                                        "title": "removed",
                                        "type": "boolean"
                                    },
                                    "logIndex": {
                                        "title": "log index",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "transactionIndex": {
                                        "title": "transaction index",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "transactionHash": {
                                        "title": "transaction hash",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]{64}$"
                                    },
                                    "blockHash": {
                                        "title": "block hash",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]{64}$"
                                    },
                                    "blockNumber": {
                                        "title": "block number",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                    },
                                    "address": {
                                        "title": "address",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-fA-F]{40}$"
                                    },
                                    "data": {
                                        "title": "data",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]*$"
                                    },
                                    "topics": {
                                        "title": "topics",
                                        "type": "array",
                                        "items": {
                                            "title": "32 hex encoded bytes",
                                            "type": "string",
                                            "pattern": "^0x[0-9a-f]{64}$"
                                        }
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "eth_getProof",
            "summary": "Returns the merkle proof for a given account and optionally some storage keys.",
            "params": [
                {
                    "name": "Address",
                    "required": true,
                    "schema": {
                        "title": "hex encoded address",
                        "type": "string",
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                    }
                },
                {
                    "name": "StorageKeys",
                    "required": true,
                    "schema": {
                        "title": "Storage keys",
                        "type": "array",
                        "items": {
                            "title": "32 hex encoded bytes",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]{0,64}$"
                        }
                    }
                },
                {
                    "name": "Block",
                    "required": true,
                    "schema": {
                        "title": "Block number, tag, or block hash",
                        "anyOf": [
                            {
                                "title": "Block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            {
                                "title": "Block tag",
                                "type": "string",
                                "enum": [
                                    "earliest",
                                    "finalized",
                                    "safe",
                                    "latest",
                                    "pending"
                                ],
                                "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                            },
                            {
                                "title": "Block hash",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]{64}$"
                            }
                        ]
                    }
                }
            ],
            "result": {
                "name": "Account",
                "schema": {
                    "title": "Account proof",
                    "type": "object",
                    "required": [
                        "address",
                        "accountProof",
                        "balance",
                        "codeHash",
                        "nonce",
                        "storageHash",
                        "storageProof"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "address": {
                            "title": "address",
                            "type": "string",
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                        },
                        "accountProof": {
                            "title": "accountProof",
                            "type": "array",
                            "items": {
                                "title": "hex encoded bytes",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                            }
                        },
                        "balance": {
                            "title": "balance",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
                        },
                        "codeHash": {
                            "title": "codeHash",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]{64}$"
                        },
                        "nonce": {
                            "title": "nonce",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
                        },
                        "storageHash": {
                            "title": "storageHash",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]{64}$"
                        },
                        "storageProof": {
                            "title": "Storage proofs",
                            "type": "array",
                            "items": {
                                "title": "Storage proof",
                                "type": "object",
                                "required": [
                                    "key",
                                    "value",
                                    "proof"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                    "key": {
                                        "title": "key",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-f]{0,64}$"
                                    },
                                    "value": {
                                        "title": "value",
                                        "type": "string",
                                        "pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
                                    },
                                    "proof": {
                                        "title": "proof",
                                        "type": "array",
                                        "items": {
                                            "title": "hex encoded bytes",
                                            "type": "string",
                                            "pattern": "^0x[0-9a-f]*$"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "eth_getStorageAt",
            "summary": "Returns the value from a storage position at a given address.",
            "params": [
                {
                    "name": "Address",
                    "required": true,
                    "schema": {
                        "title": "hex encoded address",
                        "type": "string",
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                    }
                },
                {
                    "name": "Storage slot",
                    "required": true,
                    "schema": {
                        "title": "hex encoded 256 bit unsigned integer",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
                    }
                },
                {
                    "name": "Block",
                    "required": true,
                    "schema": {
                        "title": "Block number, tag, or block hash",
                        "anyOf": [
                            {
                                "title": "Block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            {
                                "title": "Block tag",
                                "type": "string",
                                "enum": [
                                    "earliest",
                                    "finalized",
                                    "safe",
                                    "latest",
                                    "pending"
                                ],
                                "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                            },
                            {
                                "title": "Block hash",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]{64}$"
                            }
                        ]
                    }
                }
            ],
            "result": {
                "name": "Value",
                "schema": {
                    "title": "hex encoded bytes",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]*$"
                }
            }
        },
        {
            "name": "eth_getTransactionByBlockHashAndIndex",
            "summary": "Returns information about a transaction by block hash and transaction index position.",
            "params": [
                {
                    "name": "Block hash",
                    "required": true,
                    "schema": {
                        "title": "32 byte hex value",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{64}$"
                    }
                },
                {
                    "name": "Transaction index",
                    "required": true,
                    "schema": {
                        "title": "hex encoded unsigned integer",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                }
            ],
            "result": {
                "name": "Transaction information",
                "schema": {
                    "oneOf": [
                        {
                            "title": "Not Found (null)",
                            "type": "null"
                        },
                        {
                            "type": "object",
                            "title": "Transaction information",
                            "required": [
                                "blockHash",
                                "blockNumber",
                                "from",
                                "hash",
                                "transactionIndex"
                            ],
                            "properties": {
                                "blockHash": {
                                    "title": "block hash",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "blockNumber": {
                                    "title": "block number",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "from": {
                                    "title": "from address",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-fA-F]{40}$"
                                },
                                "hash": {
                                    "title": "transaction hash",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "transactionIndex": {
                                    "title": "transaction index",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "eth_getTransactionByBlockNumberAndIndex",
            "summary": "Returns information about a transaction by block number and transaction index position.",
            "params": [
                {
                    "name": "Block",
                    "required": true,
                    "schema": {
                        "title": "Block number or tag",
                        "oneOf": [
                            {
                                "title": "Block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            {
                                "title": "Block tag",
                                "type": "string",
                                "enum": [
                                    "earliest",
                                    "finalized",
                                    "safe",
                                    "latest",
                                    "pending"
                                ],
                                "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                            }
                        ]
                    }
                },
                {
                    "name": "Transaction index",
                    "required": true,
                    "schema": {
                        "title": "hex encoded unsigned integer",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                }
            ],
            "result": {
                "name": "Transaction information",
                "schema": {
                    "oneOf": [
                        {
                            "title": "Not Found (null)",
                            "type": "null"
                        },
                        {
                            "type": "object",
                            "title": "Transaction information",
                            "required": [
                                "blockHash",
                                "blockNumber",
                                "from",
                                "hash",
                                "transactionIndex"
                            ],
                            "properties": {
                                "blockHash": {
                                    "title": "block hash",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "blockNumber": {
                                    "title": "block number",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "from": {
                                    "title": "from address",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-fA-F]{40}$"
                                },
                                "hash": {
                                    "title": "transaction hash",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "transactionIndex": {
                                    "title": "transaction index",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "eth_getTransactionByHash",
            "summary": "Returns the information about a transaction requested by transaction hash.",
            "params": [
                {
                    "name": "Transaction hash",
                    "required": true,
                    "schema": {
                        "title": "32 byte hex value",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{64}$"
                    }
                }
            ],
            "result": {
                "name": "Transaction information",
                "schema": {
                    "oneOf": [
                        {
                            "title": "Not Found (null)",
                            "type": "null"
                        },
                        {
                            "type": "object",
                            "title": "Transaction information",
                            "required": [
                                "blockHash",
                                "blockNumber",
                                "from",
                                "hash",
                                "transactionIndex"
                            ],
                            "properties": {
                                "blockHash": {
                                    "title": "block hash",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "blockNumber": {
                                    "title": "block number",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "from": {
                                    "title": "from address",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-fA-F]{40}$"
                                },
                                "hash": {
                                    "title": "transaction hash",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "transactionIndex": {
                                    "title": "transaction index",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "eth_getTransactionCount",
            "summary": "Returns the number of transactions sent from an address.",
            "params": [
                {
                    "name": "Address",
                    "required": true,
                    "schema": {
                        "title": "hex encoded address",
                        "type": "string",
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                    }
                },
                {
                    "name": "Block",
                    "required": true,
                    "schema": {
                        "title": "Block number, tag, or block hash",
                        "anyOf": [
                            {
                                "title": "Block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            {
                                "title": "Block tag",
                                "type": "string",
                                "enum": [
                                    "earliest",
                                    "finalized",
                                    "safe",
                                    "latest",
                                    "pending"
                                ],
                                "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                            },
                            {
                                "title": "Block hash",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]{64}$"
                            }
                        ]
                    }
                }
            ],
            "result": {
                "name": "Transaction count",
                "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
            }
        },
        {
            "name": "eth_getTransactionReceipt",
            "summary": "Returns the receipt of a transaction by transaction hash.",
            "params": [
                {
                    "name": "Transaction hash",
                    "required": true,
                    "schema": {
                        "title": "32 byte hex value",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{64}$"
                    }
                }
            ],
            "result": {
                "name": "Receipt information",
                "schema": {
                    "oneOf": [
                        {
                            "title": "Not Found (null)",
                            "type": "null"
                        },
                        {
                            "type": "object",
                            "title": "Receipt information",
                            "required": [
                                "blockHash",
                                "blockNumber",
                                "from",
                                "cumulativeGasUsed",
                                "gasUsed",
                                "logs",
                                "logsBloom",
                                "transactionHash",
                                "transactionIndex",
                                "effectiveGasPrice"
                            ],
                            "additionalProperties": true,
                            "properties": {
                                "type": {
                                    "title": "type",
                                    "type": "string",
                                    "pattern": "^0x([0-9a-fA-F]?){1,2}$"
                                },
                                "transactionHash": {
                                    "title": "transaction hash",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "transactionIndex": {
                                    "title": "transaction index",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "blockHash": {
                                    "title": "block hash",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "blockNumber": {
                                    "title": "block number",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "from": {
                                    "title": "from",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-fA-F]{40}$"
                                },
                                "to": {
                                    "title": "to",
                                    "description": "Address of the receiver or null in a contract creation transaction.",
                                    "oneOf": [
                                        {
                                            "title": "Contract Creation (null)",
                                            "type": "null"
                                        },
                                        {
                                            "title": "Recipient Address",
                                            "type": "string",
                                            "pattern": "^0x[0-9a-fA-F]{40}$"
                                        }
                                    ]
                                },
                                "cumulativeGasUsed": {
                                    "title": "cumulative gas used",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                    "description": "The sum of gas used by this transaction and all preceding transactions in the same block."
                                },
                                "gasUsed": {
                                    "title": "gas used",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                    "description": "The amount of gas used for this specific transaction alone."
                                },
                                "blobGasUsed": {
                                    "title": "blob gas used",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                    "description": "The amount of blob gas used for this specific transaction. Only specified for blob transactions as defined by EIP-4844."
                                },
                                "contractAddress": {
                                    "title": "contract address",
                                    "description": "The contract address created, if the transaction was a contract creation, otherwise null.",
                                    "oneOf": [
                                        {
                                            "title": "hex encoded address",
                                            "type": "string",
                                            "pattern": "^0x[0-9a-fA-F]{40}$"
                                        },
                                        {
                                            "title": "Null",
                                            "type": "null"
                                        }
                                    ]
                                },
                                "logs": {
                                    "title": "logs",
                                    "type": "array",
                                    "items": {
                                        "title": "log",
                                        "type": "object",
                                        "required": [
                                            "transactionHash"
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                            "removed": {
                                                "title": "removed",
                                                "type": "boolean"
                                            },
                                            "logIndex": {
                                                "title": "log index",
                                                "type": "string",
                                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                            },
                                            "transactionIndex": {
                                                "title": "transaction index",
                                                "type": "string",
                                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                            },
                                            "transactionHash": {
                                                "title": "transaction hash",
                                                "type": "string",
                                                "pattern": "^0x[0-9a-f]{64}$"
                                            },
                                            "blockHash": {
                                                "title": "block hash",
                                                "type": "string",
                                                "pattern": "^0x[0-9a-f]{64}$"
                                            },
                                            "blockNumber": {
                                                "title": "block number",
                                                "type": "string",
                                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                            },
                                            "address": {
                                                "title": "address",
                                                "type": "string",
                                                "pattern": "^0x[0-9a-fA-F]{40}$"
                                            },
                                            "data": {
                                                "title": "data",
                                                "type": "string",
                                                "pattern": "^0x[0-9a-f]*$"
                                            },
                                            "topics": {
                                                "title": "topics",
                                                "type": "array",
                                                "items": {
                                                    "title": "32 hex encoded bytes",
                                                    "type": "string",
                                                    "pattern": "^0x[0-9a-f]{64}$"
                                                }
                                            }
                                        }
                                    }
                                },
                                "logsBloom": {
                                    "title": "logs bloom",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{512}$"
                                },
                                "root": {
                                    "title": "state root",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$",
                                    "description": "The post-transaction state root. Only specified for transactions included before the Byzantium upgrade."
                                },
                                "status": {
                                    "title": "status",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                    "description": "Either 1 (success) or 0 (failure). Only specified for transactions included after the Byzantium upgrade."
                                },
                                "effectiveGasPrice": {
                                    "title": "effective gas price",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                    "description": "The actual value per gas deducted from the sender's account. Before EIP-1559, this is equal to the transaction's gas price. After, it is equal to baseFeePerGas + min(maxFeePerGas - baseFeePerGas, maxPriorityFeePerGas)."
                                },
                                "blobGasPrice": {
                                    "title": "blob gas price",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                    "description": "The actual value per gas deducted from the sender's account for blob gas. Only specified for blob transactions as defined by EIP-4844."
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "eth_getUncleCountByBlockHash",
            "summary": "Returns the number of uncles in a block from a block matching the given block hash.",
            "params": [
                {
                    "name": "Block hash",
                    "schema": {
                        "title": "32 byte hex value",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{64}$"
                    }
                }
            ],
            "result": {
                "name": "Uncle count",
                "schema": {
                    "oneOf": [
                        {
                            "title": "Not Found (null)",
                            "type": "null"
                        },
                        {
                            "title": "Uncle count",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        }
                    ]
                }
            }
        },
        {
            "name": "eth_getUncleCountByBlockNumber",
            "summary": "Returns the number of transactions in a block matching the given block number.",
            "params": [
                {
                    "name": "Block",
                    "schema": {
                        "title": "Block number or tag",
                        "oneOf": [
                            {
                                "title": "Block number",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            {
                                "title": "Block tag",
                                "type": "string",
                                "enum": [
                                    "earliest",
                                    "finalized",
                                    "safe",
                                    "latest",
                                    "pending"
                                ],
                                "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
                            }
                        ]
                    }
                }
            ],
            "result": {
                "name": "Uncle count",
                "schema": {
                    "oneOf": [
                        {
                            "title": "Not Found (null)",
                            "type": "null"
                        },
                        {
                            "title": "Uncle count",
                            "type": "string",
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                        }
                    ]
                }
            }
        },
        {
            "name": "eth_maxPriorityFeePerGas",
            "summary": "Returns the current maxPriorityFeePerGas per gas in wei.",
            "params": [],
            "result": {
                "name": "Max priority fee per gas",
                "schema": {
                    "title": "Max priority fee per gas",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
            }
        },
        {
            "name": "eth_newBlockFilter",
            "summary": "Creates a filter in the node, to notify when a new block arrives.",
            "params": [],
            "result": {
                "name": "Filter Identifier",
                "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
            }
        },
        {
            "name": "eth_newFilter",
            "summary": "Creates a filter object, based on filter options, to notify when the state changes (logs).",
            "params": [
                {
                    "name": "Filter",
                    "schema": {
                        "title": "filter",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "fromBlock": {
                                "title": "from block",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "toBlock": {
                                "title": "to block",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "address": {
                                "title": "Address(es)",
                                "oneOf": [
                                    {
                                        "title": "Any Address",
                                        "type": "null"
                                    },
                                    {
                                        "title": "Address",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-fA-F]{40}$"
                                    },
                                    {
                                        "title": "Addresses",
                                        "type": "array",
                                        "items": {
                                            "title": "hex encoded address",
                                            "type": "string",
                                            "pattern": "^0x[0-9a-fA-F]{40}$"
                                        }
                                    }
                                ]
                            },
                            "topics": {
                                "title": "Topics",
                                "oneOf": [
                                    {
                                        "title": "Any Topic Match",
                                        "type": "null"
                                    },
                                    {
                                        "title": "Specified Filter Topics",
                                        "type": "array",
                                        "items": {
                                            "title": "Filter Topic List Entry",
                                            "oneOf": [
                                                {
                                                    "title": "Single Topic Match",
                                                    "type": "string",
                                                    "pattern": "^0x[0-9a-f]{64}$"
                                                },
                                                {
                                                    "title": "Multiple Topic Match",
                                                    "type": "array",
                                                    "items": {
                                                        "title": "32 hex encoded bytes",
                                                        "type": "string",
                                                        "pattern": "^0x[0-9a-f]{64}$"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            ],
            "result": {
                "name": "Filter Identifier",
                "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
            }
        },
        {
            "name": "eth_newPendingTransactionFilter",
            "summary": "Creates a filter in the node, to notify when new pending transactions arrive.",
            "params": [],
            "result": {
                "name": "Filter Identifier",
                "schema": {
                    "title": "hex encoded unsigned integer",
                    "type": "string",
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
            }
        },
        {
            "name": "eth_sendRawTransaction",
            "summary": "Submits a raw transaction. For EIP-4844 transactions, the raw form must be the network form. This means it includes the blobs, KZG commitments, and KZG proofs.",
            "params": [
                {
                    "name": "Transaction",
                    "required": true,
                    "schema": {
                        "title": "hex encoded bytes",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]*$"
                    }
                }
            ],
            "result": {
                "name": "Transaction hash",
                "schema": {
                    "title": "32 byte hex value",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                }
            }
        },
        {
            "name": "eth_sendTransaction",
            "summary": "Signs and submits a transaction.",
            "params": [
                {
                    "name": "Transaction",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "title": "Transaction object generic to all types",
                        "additionalProperties": false,
                        "properties": {
                            "type": {
                                "title": "type",
                                "type": "string",
                                "pattern": "^0x([0-9a-fA-F]?){1,2}$"
                            },
                            "nonce": {
                                "title": "nonce",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "to": {
                                "title": "to address",
                                "oneOf": [
                                    {
                                        "title": "Contract Creation (null)",
                                        "type": "null"
                                    },
                                    {
                                        "title": "Address",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-fA-F]{40}$"
                                    }
                                ]
                            },
                            "from": {
                                "title": "from address",
                                "type": "string",
                                "pattern": "^0x[0-9a-fA-F]{40}$"
                            },
                            "gas": {
                                "title": "gas limit",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "value": {
                                "title": "value",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "input": {
                                "title": "input data",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                            },
                            "gasPrice": {
                                "title": "gas price",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The gas price willing to be paid by the sender in wei"
                            },
                            "maxPriorityFeePerGas": {
                                "title": "max priority fee per gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                            },
                            "maxFeePerGas": {
                                "title": "max fee per gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                            },
                            "maxFeePerBlobGas": {
                                "title": "max fee per blob gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei"
                            },
                            "accessList": {
                                "title": "accessList",
                                "type": "array",
                                "description": "EIP-2930 access list",
                                "items": {
                                    "title": "Access list entry",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "address": {
                                            "title": "hex encoded address",
                                            "type": "string",
                                            "pattern": "^0x[0-9a-fA-F]{40}$"
                                        },
                                        "storageKeys": {
                                            "type": "array",
                                            "items": {
                                                "title": "32 byte hex value",
                                                "type": "string",
                                                "pattern": "^0x[0-9a-f]{64}$"
                                            }
                                        }
                                    }
                                }
                            },
                            "blobVersionedHashes": {
                                "title": "blobVersionedHashes",
                                "description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
                                "type": "array",
                                "items": {
                                    "title": "32 byte hex value",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                }
                            },
                            "blobs": {
                                "title": "blobs",
                                "description": "Raw blob data.",
                                "type": "array",
                                "items": {
                                    "title": "hex encoded bytes",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]*$"
                                }
                            },
                            "chainId": {
                                "title": "chainId",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Chain ID that this transaction is valid on."
                            }
                        }
                    }
                }
            ],
            "result": {
                "name": "Transaction hash",
                "schema": {
                    "title": "32 byte hex value",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                }
            }
        },
        {
            "name": "eth_sign",
            "summary": "Returns an EIP-191 signature over the provided data.",
            "params": [
                {
                    "name": "Address",
                    "required": true,
                    "schema": {
                        "title": "hex encoded address",
                        "type": "string",
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                    }
                },
                {
                    "name": "Message",
                    "required": true,
                    "schema": {
                        "title": "hex encoded bytes",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]*$"
                    }
                }
            ],
            "result": {
                "name": "Signature",
                "schema": {
                    "title": "65 hex encoded bytes",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{130}$"
                }
            }
        },
        {
            "name": "eth_signTransaction",
            "summary": "Returns an RLP encoded transaction signed by the specified account.",
            "params": [
                {
                    "name": "Transaction",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "title": "Transaction object generic to all types",
                        "additionalProperties": false,
                        "properties": {
                            "type": {
                                "title": "type",
                                "type": "string",
                                "pattern": "^0x([0-9a-fA-F]?){1,2}$"
                            },
                            "nonce": {
                                "title": "nonce",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "to": {
                                "title": "to address",
                                "oneOf": [
                                    {
                                        "title": "Contract Creation (null)",
                                        "type": "null"
                                    },
                                    {
                                        "title": "Address",
                                        "type": "string",
                                        "pattern": "^0x[0-9a-fA-F]{40}$"
                                    }
                                ]
                            },
                            "from": {
                                "title": "from address",
                                "type": "string",
                                "pattern": "^0x[0-9a-fA-F]{40}$"
                            },
                            "gas": {
                                "title": "gas limit",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "value": {
                                "title": "value",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                            },
                            "input": {
                                "title": "input data",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]*$"
                            },
                            "gasPrice": {
                                "title": "gas price",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The gas price willing to be paid by the sender in wei"
                            },
                            "maxPriorityFeePerGas": {
                                "title": "max priority fee per gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Maximum fee per gas the sender is willing to pay to miners in wei"
                            },
                            "maxFeePerGas": {
                                "title": "max fee per gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
                            },
                            "maxFeePerBlobGas": {
                                "title": "max fee per blob gas",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei"
                            },
                            "accessList": {
                                "title": "accessList",
                                "type": "array",
                                "description": "EIP-2930 access list",
                                "items": {
                                    "title": "Access list entry",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "address": {
                                            "title": "hex encoded address",
                                            "type": "string",
                                            "pattern": "^0x[0-9a-fA-F]{40}$"
                                        },
                                        "storageKeys": {
                                            "type": "array",
                                            "items": {
                                                "title": "32 byte hex value",
                                                "type": "string",
                                                "pattern": "^0x[0-9a-f]{64}$"
                                            }
                                        }
                                    }
                                }
                            },
                            "blobVersionedHashes": {
                                "title": "blobVersionedHashes",
                                "description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
                                "type": "array",
                                "items": {
                                    "title": "32 byte hex value",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{64}$"
                                }
                            },
                            "blobs": {
                                "title": "blobs",
                                "description": "Raw blob data.",
                                "type": "array",
                                "items": {
                                    "title": "hex encoded bytes",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]*$"
                                }
                            },
                            "chainId": {
                                "title": "chainId",
                                "type": "string",
                                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
                                "description": "Chain ID that this transaction is valid on."
                            }
                        }
                    }
                }
            ],
            "result": {
                "name": "Encoded transaction",
                "schema": {
                    "title": "hex encoded bytes",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]*$"
                }
            }
        },
        {
            "name": "eth_syncing",
            "summary": "Returns an object with data about the sync status or false.",
            "params": [],
            "result": {
                "name": "Syncing status",
                "schema": {
                    "title": "Syncing status",
                    "oneOf": [
                        {
                            "title": "Syncing progress",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "startingBlock": {
                                    "title": "Starting block",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "currentBlock": {
                                    "title": "Current block",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                },
                                "highestBlock": {
                                    "title": "Highest block",
                                    "type": "string",
                                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                                }
                            }
                        },
                        {
                            "title": "Not syncing",
                            "description": "Should always return false if not syncing.",
                            "type": "boolean"
                        }
                    ]
                }
            }
        },
        {
            "name": "eth_uninstallFilter",
            "summary": "Uninstalls a filter with given id.",
            "params": [
                {
                    "name": "Filter Identifier",
                    "schema": {
                        "title": "hex encoded unsigned integer",
                        "type": "string",
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                }
            ],
            "result": {
                "name": "Success",
                "schema": {
                    "type": "boolean"
                }
            }
        }
    ],
    "components": {}
}