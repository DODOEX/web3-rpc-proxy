// Code generated by MockGen. DO NOT EDIT.
// Source: internal/module/agent/service/agent_service.go
//
// Generated by this command:
//
//	mockgen -source=internal/module/agent/service/agent_service.go -destination=internal/module/agent/service/agent_service_mock.go -package=service
//

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	fasthttp "github.com/valyala/fasthttp"
	gomock "go.uber.org/mock/gomock"
)

// MockAgentService is a mock of AgentService interface.
type MockAgentService struct {
	ctrl     *gomock.Controller
	recorder *MockAgentServiceMockRecorder
}

// MockAgentServiceMockRecorder is the mock recorder for MockAgentService.
type MockAgentServiceMockRecorder struct {
	mock *MockAgentService
}

// NewMockAgentService creates a new mock instance.
func NewMockAgentService(ctrl *gomock.Controller) *MockAgentService {
	mock := &MockAgentService{ctrl: ctrl}
	mock.recorder = &MockAgentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAgentService) EXPECT() *MockAgentServiceMockRecorder {
	return m.recorder
}

// Call mocks base method.
func (m *MockAgentService) Call(ctx *fasthttp.RequestCtx) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Call", ctx)
}

// Call indicates an expected call of Call.
func (mr *MockAgentServiceMockRecorder) Call(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Call", reflect.TypeOf((*MockAgentService)(nil).Call), ctx)
}
